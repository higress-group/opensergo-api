// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core/v1alpha1/core.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The combined items in every field have AND semantic.
type Selector struct {
	// OR semantic
	// 1. When specified, it will select the matching routes for the matching workloads.
	// 2. When omitted, a) if the data plane is gateway, it will selector all routes of matching data plane.
	// b) if the data is sidecar of proxyless, to be discussed.
	Routes []*RouteSelector `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	// OR semantic
	// 1. When specified, it will select the matching workloads in the config namespace.
	// 2. When omitted, it will selector all workloads in the config namespace.
	// 3. When the config namespace is admin namespace, the above cases will extend to all namespaces.
	Workloads            []*WorkloadSelector `protobuf:"bytes,2,rep,name=workloads,proto3" json:"workloads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Selector) Reset()         { *m = Selector{} }
func (m *Selector) String() string { return proto.CompactTextString(m) }
func (*Selector) ProtoMessage()    {}
func (*Selector) Descriptor() ([]byte, []int) {
	return fileDescriptor_12495927b1437354, []int{0}
}

func (m *Selector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Selector.Unmarshal(m, b)
}
func (m *Selector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Selector.Marshal(b, m, deterministic)
}
func (m *Selector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Selector.Merge(m, src)
}
func (m *Selector) XXX_Size() int {
	return xxx_messageInfo_Selector.Size(m)
}
func (m *Selector) XXX_DiscardUnknown() {
	xxx_messageInfo_Selector.DiscardUnknown(m)
}

var xxx_messageInfo_Selector proto.InternalMessageInfo

func (m *Selector) GetRoutes() []*RouteSelector {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *Selector) GetWorkloads() []*WorkloadSelector {
	if m != nil {
		return m.Workloads
	}
	return nil
}

type RouteSelector struct {
	// route name
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteSelector) Reset()         { *m = RouteSelector{} }
func (m *RouteSelector) String() string { return proto.CompactTextString(m) }
func (*RouteSelector) ProtoMessage()    {}
func (*RouteSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_12495927b1437354, []int{1}
}

func (m *RouteSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteSelector.Unmarshal(m, b)
}
func (m *RouteSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteSelector.Marshal(b, m, deterministic)
}
func (m *RouteSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteSelector.Merge(m, src)
}
func (m *RouteSelector) XXX_Size() int {
	return xxx_messageInfo_RouteSelector.Size(m)
}
func (m *RouteSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteSelector.DiscardUnknown(m)
}

var xxx_messageInfo_RouteSelector proto.InternalMessageInfo

func (m *RouteSelector) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WorkloadSelector struct {
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WorkloadSelector) Reset()         { *m = WorkloadSelector{} }
func (m *WorkloadSelector) String() string { return proto.CompactTextString(m) }
func (*WorkloadSelector) ProtoMessage()    {}
func (*WorkloadSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_12495927b1437354, []int{2}
}

func (m *WorkloadSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadSelector.Unmarshal(m, b)
}
func (m *WorkloadSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadSelector.Marshal(b, m, deterministic)
}
func (m *WorkloadSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadSelector.Merge(m, src)
}
func (m *WorkloadSelector) XXX_Size() int {
	return xxx_messageInfo_WorkloadSelector.Size(m)
}
func (m *WorkloadSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadSelector.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadSelector proto.InternalMessageInfo

func (m *WorkloadSelector) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterType((*Selector)(nil), "io.opensergo.core.v1alpha1.Selector")
	proto.RegisterType((*RouteSelector)(nil), "io.opensergo.core.v1alpha1.RouteSelector")
	proto.RegisterType((*WorkloadSelector)(nil), "io.opensergo.core.v1alpha1.WorkloadSelector")
	proto.RegisterMapType((map[string]string)(nil), "io.opensergo.core.v1alpha1.WorkloadSelector.LabelsEntry")
}

func init() { proto.RegisterFile("core/v1alpha1/core.proto", fileDescriptor_12495927b1437354) }

var fileDescriptor_12495927b1437354 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x48, 0xce, 0x2f, 0x4a,
	0xd5, 0x2f, 0x33, 0x4c, 0xcc, 0x29, 0xc8, 0x48, 0x34, 0xd4, 0x07, 0xf1, 0xf4, 0x0a, 0x8a, 0xf2,
	0x4b, 0xf2, 0x85, 0xa4, 0x32, 0xf3, 0xf5, 0xf2, 0x0b, 0x52, 0xf3, 0x8a, 0x53, 0x8b, 0xd2, 0xf3,
	0xf5, 0xc0, 0x12, 0x30, 0x65, 0x4a, 0x33, 0x19, 0xb9, 0x38, 0x82, 0x53, 0x73, 0x52, 0x93, 0x4b,
	0xf2, 0x8b, 0x84, 0x1c, 0xb9, 0xd8, 0x8a, 0xf2, 0x4b, 0x4b, 0x52, 0x8b, 0x25, 0x18, 0x15, 0x98,
	0x35, 0xb8, 0x8d, 0x34, 0xf5, 0x70, 0xeb, 0xd4, 0x0b, 0x02, 0xa9, 0x84, 0x69, 0x0d, 0x82, 0x6a,
	0x14, 0xf2, 0xe2, 0xe2, 0x2c, 0xcf, 0x2f, 0xca, 0xce, 0xc9, 0x4f, 0x4c, 0x29, 0x96, 0x60, 0x02,
	0x9b, 0xa2, 0x83, 0xcf, 0x94, 0x70, 0xa8, 0x62, 0xb8, 0x41, 0x08, 0xed, 0x4a, 0xca, 0x5c, 0xbc,
	0x28, 0x96, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x81, 0xd9, 0x4a, 0xf3, 0x19, 0xb9, 0x04, 0xd0, 0x0d, 0x11, 0x0a, 0xe0, 0x62, 0xcb, 0x49,
	0x4c, 0x4a, 0xcd, 0x81, 0x79, 0xc4, 0x82, 0x14, 0x27, 0xe8, 0xf9, 0x80, 0xb5, 0xba, 0xe6, 0x95,
	0x14, 0x55, 0x06, 0x41, 0xcd, 0x91, 0xb2, 0xe4, 0xe2, 0x46, 0x12, 0x16, 0x12, 0xe0, 0x62, 0xce,
	0x4e, 0xad, 0x84, 0x3a, 0x04, 0xc4, 0x14, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95,
	0x60, 0x02, 0x8b, 0x41, 0x38, 0x56, 0x4c, 0x16, 0x8c, 0x4e, 0x0a, 0x51, 0x72, 0x08, 0xab, 0x33,
	0xf3, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x51, 0xe2, 0x2a, 0x89, 0x0d, 0x1c, 0x4f, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xca, 0x7b, 0x6d, 0x68, 0xc3, 0x01, 0x00, 0x00,
}
