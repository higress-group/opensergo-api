// Copyright 2023, OpenSergo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by kubetype-gen. DO NOT EDIT.

package v1alpha1

import (
	metav1alpha1 "istio.io/api/meta/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	policyv1alpha1 "opensergo.io/api/policy/v1alpha1"
)

// please upgrade the proto package
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// <!-- crd generation tags
// +cue-gen:CircuitBreaker:groupName:policy.opensergo.io
// +cue-gen:CircuitBreaker:version:v1alpha1
// +cue-gen:CircuitBreaker:annotations:helm.sh/resource-policy=keep
// +cue-gen:CircuitBreaker:subresource:status
// +cue-gen:CircuitBreaker:scope:Namespaced
// +cue-gen:CircuitBreaker:resource:categories=opensergo-io
// +cue-gen:CircuitBreaker:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=policy.opensergo.io/v1alpha1
// +genclient
// +k8s:deepcopy-gen=true
// -->
type CircuitBreaker struct {
	v1.TypeMeta `json:",inline"`
	// +optional
	v1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`

	// Spec defines the implementation of this definition.
	// +optional
	Spec policyv1alpha1.CircuitBreaker `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`

	Status metav1alpha1.IstioStatus `json:"status"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// CircuitBreakerList is a collection of CircuitBreakers.
type CircuitBreakerList struct {
	v1.TypeMeta `json:",inline"`
	// +optional
	v1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Items       []*CircuitBreaker `json:"items" protobuf:"bytes,2,rep,name=items"`
}

// please upgrade the proto package
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// <!-- crd generation tags
// +cue-gen:ConcurrencyLimiting:groupName:policy.opensergo.io
// +cue-gen:ConcurrencyLimiting:version:v1alpha1
// +cue-gen:ConcurrencyLimiting:annotations:helm.sh/resource-policy=keep
// +cue-gen:ConcurrencyLimiting:subresource:status
// +cue-gen:ConcurrencyLimiting:scope:Namespaced
// +cue-gen:ConcurrencyLimiting:resource:categories=opensergo-io
// +cue-gen:ConcurrencyLimiting:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=policy.opensergo.io/v1alpha1
// +genclient
// +k8s:deepcopy-gen=true
// -->
type ConcurrencyLimiting struct {
	v1.TypeMeta `json:",inline"`
	// +optional
	v1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`

	// Spec defines the implementation of this definition.
	// +optional
	Spec policyv1alpha1.ConcurrencyLimiting `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`

	Status metav1alpha1.IstioStatus `json:"status"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ConcurrencyLimitingList is a collection of ConcurrencyLimitings.
type ConcurrencyLimitingList struct {
	v1.TypeMeta `json:",inline"`
	// +optional
	v1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Items       []*ConcurrencyLimiting `json:"items" protobuf:"bytes,2,rep,name=items"`
}

// please upgrade the proto package
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// <!-- crd generation tags
// +cue-gen:RateLimiting:groupName:policy.opensergo.io
// +cue-gen:RateLimiting:version:v1alpha1
// +cue-gen:RateLimiting:annotations:helm.sh/resource-policy=keep
// +cue-gen:RateLimiting:subresource:status
// +cue-gen:RateLimiting:scope:Namespaced
// +cue-gen:RateLimiting:resource:categories=opensergo-io
// +cue-gen:RateLimiting:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=policy.opensergo.io/v1alpha1
// +genclient
// +k8s:deepcopy-gen=true
// -->
type RateLimiting struct {
	v1.TypeMeta `json:",inline"`
	// +optional
	v1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`

	// Spec defines the implementation of this definition.
	// +optional
	Spec policyv1alpha1.RateLimiting `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`

	Status metav1alpha1.IstioStatus `json:"status"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// RateLimitingList is a collection of RateLimitings.
type RateLimitingList struct {
	v1.TypeMeta `json:",inline"`
	// +optional
	v1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Items       []*RateLimiting `json:"items" protobuf:"bytes,2,rep,name=items"`
}
