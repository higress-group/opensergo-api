// Copyright 2023, OpenSergo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package io.opensergo.policy.v1alpha1;

import "core/v1alpha1/core.proto";
import "policy/v1alpha1/common.proto";

import "google/protobuf/duration.proto";

option go_package = "opensergo.io/api/policy/v1alpha1";

//
// <!-- crd generation tags
// +cue-gen:RateLimiting:groupName:policy.opensergo.io
// +cue-gen:RateLimiting:version:v1alpha1
// +cue-gen:RateLimiting:storageVersion
// +cue-gen:RateLimiting:annotations:helm.sh/resource-policy=keep
// +cue-gen:RateLimiting:subresource:status
// +cue-gen:RateLimiting:scope:Namespaced
// +cue-gen:RateLimiting:resource:categories=opensergo-io
// +cue-gen:RateLimiting:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=policy.opensergo.io/v1alpha1
// +genclient
// +k8s:deepcopy-gen=true
// -->
message RateLimiting {
  io.opensergo.core.v1alpha1.Selector selector = 1;

  message Config {
    Scope scope = 1;

    // The max requests can pass within the window.
    uint64 limit = 2;
    // The max requests can pass instantly.
    uint64 burst = 3;
    // The window in which the max requests can pass
    google.protobuf.Duration interval = 4;
  }

  // The config for rate limiting.
  Config config = 2;
  // The fallback action when the rate limiting works.
  io.opensergo.policy.v1alpha1.FallbackAction action = 3;
}