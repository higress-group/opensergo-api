// Copyright 2023, OpenSergo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: policy/v1alpha1/circuit_breaker.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	v1alpha1 "opensergo.io/api/core/v1alpha1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// <!-- crd generation tags
// +cue-gen:CircuitBreaker:groupName:policy.opensergo.io
// +cue-gen:CircuitBreaker:version:v1alpha1
// +cue-gen:CircuitBreaker:storageVersion
// +cue-gen:CircuitBreaker:annotations:helm.sh/resource-policy=keep
// +cue-gen:CircuitBreaker:subresource:status
// +cue-gen:CircuitBreaker:scope:Namespaced
// +cue-gen:CircuitBreaker:resource:categories=opensergo-io
// +cue-gen:CircuitBreaker:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=policy.opensergo.io/v1alpha1
// +genclient
// +k8s:deepcopy-gen=true
// -->
type CircuitBreaker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *v1alpha1.Selector     `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	Config   *CircuitBreaker_Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// The fallback action when the circuit breaker works.
	Action *FallbackAction `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CircuitBreaker) Reset() {
	*x = CircuitBreaker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CircuitBreaker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircuitBreaker) ProtoMessage() {}

func (x *CircuitBreaker) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircuitBreaker.ProtoReflect.Descriptor instead.
func (*CircuitBreaker) Descriptor() ([]byte, []int) {
	return file_policy_v1alpha1_circuit_breaker_proto_rawDescGZIP(), []int{0}
}

func (x *CircuitBreaker) GetSelector() *v1alpha1.Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *CircuitBreaker) GetConfig() *CircuitBreaker_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CircuitBreaker) GetAction() *FallbackAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type CircuitBreaker_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to StrategyType:
	//
	//	*CircuitBreaker_Config_SlowRequest_
	//	*CircuitBreaker_Config_ErrorRequest_
	StrategyType     isCircuitBreaker_Config_StrategyType `protobuf_oneof:"strategy_type"`
	AbnormalPercent  uint32                               `protobuf:"varint,3,opt,name=abnormal_percent,json=abnormalPercent,proto3" json:"abnormal_percent,omitempty"`
	Interval         *durationpb.Duration                 `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"`
	BreakingInterval *durationpb.Duration                 `protobuf:"bytes,5,opt,name=breaking_interval,json=breakingInterval,proto3" json:"breaking_interval,omitempty"`
	MinRequests      uint32                               `protobuf:"varint,6,opt,name=min_requests,json=minRequests,proto3" json:"min_requests,omitempty"`
	Recovery         *CircuitBreaker_Config_Recovery      `protobuf:"bytes,7,opt,name=recovery,proto3" json:"recovery,omitempty"`
}

func (x *CircuitBreaker_Config) Reset() {
	*x = CircuitBreaker_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CircuitBreaker_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircuitBreaker_Config) ProtoMessage() {}

func (x *CircuitBreaker_Config) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircuitBreaker_Config.ProtoReflect.Descriptor instead.
func (*CircuitBreaker_Config) Descriptor() ([]byte, []int) {
	return file_policy_v1alpha1_circuit_breaker_proto_rawDescGZIP(), []int{0, 0}
}

func (m *CircuitBreaker_Config) GetStrategyType() isCircuitBreaker_Config_StrategyType {
	if m != nil {
		return m.StrategyType
	}
	return nil
}

func (x *CircuitBreaker_Config) GetSlowRequest() *CircuitBreaker_Config_SlowRequest {
	if x, ok := x.GetStrategyType().(*CircuitBreaker_Config_SlowRequest_); ok {
		return x.SlowRequest
	}
	return nil
}

func (x *CircuitBreaker_Config) GetErrorRequest() *CircuitBreaker_Config_ErrorRequest {
	if x, ok := x.GetStrategyType().(*CircuitBreaker_Config_ErrorRequest_); ok {
		return x.ErrorRequest
	}
	return nil
}

func (x *CircuitBreaker_Config) GetAbnormalPercent() uint32 {
	if x != nil {
		return x.AbnormalPercent
	}
	return 0
}

func (x *CircuitBreaker_Config) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *CircuitBreaker_Config) GetBreakingInterval() *durationpb.Duration {
	if x != nil {
		return x.BreakingInterval
	}
	return nil
}

func (x *CircuitBreaker_Config) GetMinRequests() uint32 {
	if x != nil {
		return x.MinRequests
	}
	return 0
}

func (x *CircuitBreaker_Config) GetRecovery() *CircuitBreaker_Config_Recovery {
	if x != nil {
		return x.Recovery
	}
	return nil
}

type isCircuitBreaker_Config_StrategyType interface {
	isCircuitBreaker_Config_StrategyType()
}

type CircuitBreaker_Config_SlowRequest_ struct {
	SlowRequest *CircuitBreaker_Config_SlowRequest `protobuf:"bytes,1,opt,name=slow_request,json=slowRequest,proto3,oneof"`
}

type CircuitBreaker_Config_ErrorRequest_ struct {
	ErrorRequest *CircuitBreaker_Config_ErrorRequest `protobuf:"bytes,2,opt,name=error_request,json=errorRequest,proto3,oneof"`
}

func (*CircuitBreaker_Config_SlowRequest_) isCircuitBreaker_Config_StrategyType() {}

func (*CircuitBreaker_Config_ErrorRequest_) isCircuitBreaker_Config_StrategyType() {}

type CircuitBreaker_Config_SlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latency *durationpb.Duration `protobuf:"bytes,1,opt,name=latency,proto3" json:"latency,omitempty"`
}

func (x *CircuitBreaker_Config_SlowRequest) Reset() {
	*x = CircuitBreaker_Config_SlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CircuitBreaker_Config_SlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircuitBreaker_Config_SlowRequest) ProtoMessage() {}

func (x *CircuitBreaker_Config_SlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircuitBreaker_Config_SlowRequest.ProtoReflect.Descriptor instead.
func (*CircuitBreaker_Config_SlowRequest) Descriptor() ([]byte, []int) {
	return file_policy_v1alpha1_circuit_breaker_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *CircuitBreaker_Config_SlowRequest) GetLatency() *durationpb.Duration {
	if x != nil {
		return x.Latency
	}
	return nil
}

type CircuitBreaker_Config_ErrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Or semantic
	Conditions []string `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *CircuitBreaker_Config_ErrorRequest) Reset() {
	*x = CircuitBreaker_Config_ErrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CircuitBreaker_Config_ErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircuitBreaker_Config_ErrorRequest) ProtoMessage() {}

func (x *CircuitBreaker_Config_ErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircuitBreaker_Config_ErrorRequest.ProtoReflect.Descriptor instead.
func (*CircuitBreaker_Config_ErrorRequest) Descriptor() ([]byte, []int) {
	return file_policy_v1alpha1_circuit_breaker_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *CircuitBreaker_Config_ErrorRequest) GetConditions() []string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type CircuitBreaker_Config_Recovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProbeCount uint32 `protobuf:"varint,1,opt,name=probe_count,json=probeCount,proto3" json:"probe_count,omitempty"`
}

func (x *CircuitBreaker_Config_Recovery) Reset() {
	*x = CircuitBreaker_Config_Recovery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CircuitBreaker_Config_Recovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircuitBreaker_Config_Recovery) ProtoMessage() {}

func (x *CircuitBreaker_Config_Recovery) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1alpha1_circuit_breaker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircuitBreaker_Config_Recovery.ProtoReflect.Descriptor instead.
func (*CircuitBreaker_Config_Recovery) Descriptor() ([]byte, []int) {
	return file_policy_v1alpha1_circuit_breaker_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *CircuitBreaker_Config_Recovery) GetProbeCount() uint32 {
	if x != nil {
		return x.ProbeCount
	}
	return 0
}

var File_policy_v1alpha1_circuit_breaker_proto protoreflect.FileDescriptor

var file_policy_v1alpha1_circuit_breaker_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x72, 0x67, 0x6f, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x18, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x07,
	0x0a, 0x0e, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72,
	0x12, 0x40, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x67,
	0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x67,
	0x6f, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x44, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x67, 0x6f, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb0, 0x05, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x64, 0x0a, 0x0c, 0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x72, 0x67, 0x6f, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x42, 0x72, 0x65,
	0x61, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x67, 0x6f, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x69, 0x72,
	0x63, 0x75, 0x69, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x62, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x46, 0x0a, 0x11, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x08,
	0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x67, 0x6f, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x69,
	0x72, 0x63, 0x75, 0x69, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x42, 0x0a, 0x0b, 0x53, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x2e, 0x0a, 0x0c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2b, 0x0a, 0x08, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x22, 0x5a, 0x20, 0x6f, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x72, 0x67, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_policy_v1alpha1_circuit_breaker_proto_rawDescOnce sync.Once
	file_policy_v1alpha1_circuit_breaker_proto_rawDescData = file_policy_v1alpha1_circuit_breaker_proto_rawDesc
)

func file_policy_v1alpha1_circuit_breaker_proto_rawDescGZIP() []byte {
	file_policy_v1alpha1_circuit_breaker_proto_rawDescOnce.Do(func() {
		file_policy_v1alpha1_circuit_breaker_proto_rawDescData = protoimpl.X.CompressGZIP(file_policy_v1alpha1_circuit_breaker_proto_rawDescData)
	})
	return file_policy_v1alpha1_circuit_breaker_proto_rawDescData
}

var file_policy_v1alpha1_circuit_breaker_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_policy_v1alpha1_circuit_breaker_proto_goTypes = []interface{}{
	(*CircuitBreaker)(nil),                     // 0: io.opensergo.policy.v1alpha1.CircuitBreaker
	(*CircuitBreaker_Config)(nil),              // 1: io.opensergo.policy.v1alpha1.CircuitBreaker.Config
	(*CircuitBreaker_Config_SlowRequest)(nil),  // 2: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.SlowRequest
	(*CircuitBreaker_Config_ErrorRequest)(nil), // 3: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.ErrorRequest
	(*CircuitBreaker_Config_Recovery)(nil),     // 4: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.Recovery
	(*v1alpha1.Selector)(nil),                  // 5: io.opensergo.core.v1alpha1.Selector
	(*FallbackAction)(nil),                     // 6: io.opensergo.policy.v1alpha1.FallbackAction
	(*durationpb.Duration)(nil),                // 7: google.protobuf.Duration
}
var file_policy_v1alpha1_circuit_breaker_proto_depIdxs = []int32{
	5, // 0: io.opensergo.policy.v1alpha1.CircuitBreaker.selector:type_name -> io.opensergo.core.v1alpha1.Selector
	1, // 1: io.opensergo.policy.v1alpha1.CircuitBreaker.config:type_name -> io.opensergo.policy.v1alpha1.CircuitBreaker.Config
	6, // 2: io.opensergo.policy.v1alpha1.CircuitBreaker.action:type_name -> io.opensergo.policy.v1alpha1.FallbackAction
	2, // 3: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.slow_request:type_name -> io.opensergo.policy.v1alpha1.CircuitBreaker.Config.SlowRequest
	3, // 4: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.error_request:type_name -> io.opensergo.policy.v1alpha1.CircuitBreaker.Config.ErrorRequest
	7, // 5: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.interval:type_name -> google.protobuf.Duration
	7, // 6: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.breaking_interval:type_name -> google.protobuf.Duration
	4, // 7: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.recovery:type_name -> io.opensergo.policy.v1alpha1.CircuitBreaker.Config.Recovery
	7, // 8: io.opensergo.policy.v1alpha1.CircuitBreaker.Config.SlowRequest.latency:type_name -> google.protobuf.Duration
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_policy_v1alpha1_circuit_breaker_proto_init() }
func file_policy_v1alpha1_circuit_breaker_proto_init() {
	if File_policy_v1alpha1_circuit_breaker_proto != nil {
		return
	}
	file_policy_v1alpha1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_policy_v1alpha1_circuit_breaker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CircuitBreaker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1alpha1_circuit_breaker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CircuitBreaker_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1alpha1_circuit_breaker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CircuitBreaker_Config_SlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1alpha1_circuit_breaker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CircuitBreaker_Config_ErrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1alpha1_circuit_breaker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CircuitBreaker_Config_Recovery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_policy_v1alpha1_circuit_breaker_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CircuitBreaker_Config_SlowRequest_)(nil),
		(*CircuitBreaker_Config_ErrorRequest_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_policy_v1alpha1_circuit_breaker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_policy_v1alpha1_circuit_breaker_proto_goTypes,
		DependencyIndexes: file_policy_v1alpha1_circuit_breaker_proto_depIdxs,
		MessageInfos:      file_policy_v1alpha1_circuit_breaker_proto_msgTypes,
	}.Build()
	File_policy_v1alpha1_circuit_breaker_proto = out.File
	file_policy_v1alpha1_circuit_breaker_proto_rawDesc = nil
	file_policy_v1alpha1_circuit_breaker_proto_goTypes = nil
	file_policy_v1alpha1_circuit_breaker_proto_depIdxs = nil
}
