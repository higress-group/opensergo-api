// Code generated by protoc-gen-jsonshim. DO NOT EDIT.
package v1alpha1

import (
	bytes "bytes"
	jsonpb "github.com/golang/protobuf/jsonpb"
)

// MarshalJSON is a custom marshaler for FallbackAction
func (this *FallbackAction) MarshalJSON() ([]byte, error) {
	str, err := CommonMarshaler.MarshalToString(this)
	return []byte(str), err
}

// UnmarshalJSON is a custom unmarshaler for FallbackAction
func (this *FallbackAction) UnmarshalJSON(b []byte) error {
	return CommonUnmarshaler.Unmarshal(bytes.NewReader(b), this)
}

// MarshalJSON is a custom marshaler for FallbackAction_HTTPFallback
func (this *FallbackAction_HTTPFallback) MarshalJSON() ([]byte, error) {
	str, err := CommonMarshaler.MarshalToString(this)
	return []byte(str), err
}

// UnmarshalJSON is a custom unmarshaler for FallbackAction_HTTPFallback
func (this *FallbackAction_HTTPFallback) UnmarshalJSON(b []byte) error {
	return CommonUnmarshaler.Unmarshal(bytes.NewReader(b), this)
}

// MarshalJSON is a custom marshaler for FallbackAction_HTTPFallback_HTTPCustomResponse
func (this *FallbackAction_HTTPFallback_HTTPCustomResponse) MarshalJSON() ([]byte, error) {
	str, err := CommonMarshaler.MarshalToString(this)
	return []byte(str), err
}

// UnmarshalJSON is a custom unmarshaler for FallbackAction_HTTPFallback_HTTPCustomResponse
func (this *FallbackAction_HTTPFallback_HTTPCustomResponse) UnmarshalJSON(b []byte) error {
	return CommonUnmarshaler.Unmarshal(bytes.NewReader(b), this)
}

// MarshalJSON is a custom marshaler for FallbackAction_HTTPFallback_HTTPRedirect
func (this *FallbackAction_HTTPFallback_HTTPRedirect) MarshalJSON() ([]byte, error) {
	str, err := CommonMarshaler.MarshalToString(this)
	return []byte(str), err
}

// UnmarshalJSON is a custom unmarshaler for FallbackAction_HTTPFallback_HTTPRedirect
func (this *FallbackAction_HTTPFallback_HTTPRedirect) UnmarshalJSON(b []byte) error {
	return CommonUnmarshaler.Unmarshal(bytes.NewReader(b), this)
}

var (
	CommonMarshaler   = &jsonpb.Marshaler{}
	CommonUnmarshaler = &jsonpb.Unmarshaler{AllowUnknownFields: true}
)
